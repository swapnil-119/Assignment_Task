@model NimapTask.ViewModels.ProductListViewModel

@{
    ViewData["Title"] = "Products";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <h1 class="mb-4">Products</h1>

            <!-- Action Buttons -->
            <div class="mb-3">
                <a asp-action="Create" class="btn btn-success">
                    <i class="fas fa-plus"></i> Create New Product
                </a>
            </div>

            <!-- Pagination Info -->
            <div class="row mb-3">
                <div class="col-md-6">
                    <div class="alert alert-info mb-0">
                        <strong>Pagination Info:</strong>
                        Showing @(Model.Products.Count) of @Model.TotalRecords total records |
                        Page @Model.CurrentPage of @Model.TotalPages
                        (@Model.PageSize records per page)
                    </div>
                </div>
            </div>

            <!-- Products Table -->
            @if (Model.Products.Any())
            {
                <div class="table-responsive">
                    <table class="table table-striped table-bordered table-hover">
                        <thead class="table-dark">
                            <tr>
                                <th scope="col">Product ID</th>
                                <th scope="col">Product Name</th>
                                <th scope="col">Category ID</th>
                                <th scope="col">Category Name</th>
                                <th scope="col" class="text-center">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Products)
                            {
                                <tr>
                                    <td>@Html.DisplayFor(modelItem => item.ProductId)</td>
                                    <td>@Html.DisplayFor(modelItem => item.ProductName)</td>
                                    <td>@Html.DisplayFor(modelItem => item.CategoryId)</td>
                                    <td>@Html.DisplayFor(modelItem => item.CategoryName)</td>
                                    <td class="text-center">
                                        <div class="btn-group" role="group">
                                            <a asp-action="Edit" asp-route-id="@item.ProductId"
                                               class="btn btn-primary btn-sm" title="Edit">
                                                Edit
                                            </a>
                                            <a asp-action="Details" asp-route-id="@item.ProductId"
                                               class="btn btn-info btn-sm" title="Details">
                                                Details
                                            </a>
                                            <a asp-action="Delete" asp-route-id="@item.ProductId"
                                               class="btn btn-danger btn-sm" title="Delete">
                                                Delete
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Pagination Controls -->
                <nav aria-label="Product pagination" class="mt-4">
                    <ul class="pagination justify-content-center">

                        <!-- First Page -->
                        @if (Model.CurrentPage > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" asp-action="Index" asp-route-page="1" title="First Page">
                                    &laquo;&laquo; First
                                </a>
                            </li>
                        }

                        <!-- Previous Page -->
                        @if (Model.HasPreviousPage)
                        {
                            <li class="page-item">
                                <a class="page-link" asp-action="Index" asp-route-page="@(Model.CurrentPage - 1)" title="Previous Page">
                                    &laquo; Previous
                                </a>
                            </li>
                        }
                        else
                        {
                            <li class="page-item disabled">
                                <span class="page-link">&laquo; Previous</span>
                            </li>
                        }

                        <!-- Page Numbers -->
                        @{
                            int startPage = Math.Max(1, Model.CurrentPage - 2);
                            int endPage = Math.Min(Model.TotalPages, Model.CurrentPage + 2);
                        }

                        @if (startPage > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" asp-action="Index" asp-route-page="1">1</a>
                            </li>
                            @if (startPage > 2)
                            {
                                <li class="page-item disabled">
                                    <span class="page-link">...</span>
                                </li>
                            }
                        }

                        @for (int i = startPage; i <= endPage; i++)
                        {
                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                @if (i == Model.CurrentPage)
                                {
                                    <span class="page-link">
                                        @i
                                        <span class="sr-only">(current)</span>
                                    </span>
                                }
                                else
                                {
                                    <a class="page-link" asp-action="Index" asp-route-page="@i">@i</a>
                                }
                            </li>
                        }

                        @if (endPage < Model.TotalPages)
                        {
                            @if (endPage < Model.TotalPages - 1)
                            {
                                <li class="page-item disabled">
                                    <span class="page-link">...</span>
                                </li>
                            }
                            <li class="page-item">
                                <a class="page-link" asp-action="Index" asp-route-page="@Model.TotalPages">@Model.TotalPages</a>
                            </li>
                        }

                        <!-- Next Page -->
                        @if (Model.HasNextPage)
                        {
                            <li class="page-item">
                                <a class="page-link" asp-action="Index" asp-route-page="@(Model.CurrentPage + 1)" title="Next Page">
                                    Next &raquo;
                                </a>
                            </li>
                        }
                        else
                        {
                            <li class="page-item disabled">
                                <span class="page-link">Next &raquo;</span>
                            </li>
                        }

                        <!-- Last Page -->
                        @if (Model.CurrentPage < Model.TotalPages)
                        {
                            <li class="page-item">
                                <a class="page-link" asp-action="Index" asp-route-page="@Model.TotalPages" title="Last Page">
                                    Last &raquo;&raquo;
                                </a>
                            </li>
                        }
                    </ul>
                </nav>

                <!-- Pagination Summary -->
                <div class="text-center mt-3">
                    <small class="text-muted">
                        Page @Model.CurrentPage of @Model.TotalPages
                        (@Model.TotalRecords total records, @Model.PageSize per page)
                    </small>
                </div>
            }
            else
            {
                <div class="alert alert-warning">
                    <h4>No Products Found</h4>
                    <p>There are currently no products in the database.</p>
                    <a asp-action="Create" class="btn btn-primary">Create First Product</a>
                </div>
            }
        </div>
    </div>
</div>