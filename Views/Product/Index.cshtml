@model NimapTask.ViewModels.ProductListViewModel

@{
    ViewData["Title"] = "Products";
}

<h1>Products</h1>

<p>
    <a asp-action="Create" class="btn btn-success">Create New Product</a>
</p>

<div class="mb-3">
    <p>Total Records: @Model.TotalRecords | Page @Model.CurrentPage of @Model.TotalPages</p>
</div>

<table class="table table-striped">
    <thead>
        <tr>
            <th>Product ID</th>
            <th>Product Name</th>
            <th>Category ID</th>
            <th>Category Name</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Products)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.ProductId)</td>
                <td>@Html.DisplayFor(modelItem => item.ProductName)</td>
                <td>@Html.DisplayFor(modelItem => item.CategoryId)</td>
                <td>@Html.DisplayFor(modelItem => item.CategoryName)</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ProductId" class="btn btn-primary btn-sm">Edit</a>
                    <a asp-action="Details" asp-route-id="@item.ProductId" class="btn btn-info btn-sm">Details</a>
                    <a asp-action="Delete" asp-route-id="@item.ProductId" class="btn btn-danger btn-sm">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Pagination -->
<nav aria-label="Product pagination">
    <ul class="pagination justify-content-center">
        @if (Model.HasPreviousPage)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-page="@(Model.CurrentPage - 1)">Previous</a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <span class="page-link">Previous</span>
            </li>
        }

        @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
        {
            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                <a class="page-link" asp-action="Index" asp-route-page="@i">@i</a>
            </li>
        }

        @if (Model.HasNextPage)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-page="@(Model.CurrentPage + 1)">Next</a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <span class="page-link">Next</span>
            </li>
        }
    </ul>
</nav>